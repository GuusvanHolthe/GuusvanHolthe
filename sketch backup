let data;
let scene = 0; // Definieer de variabele scene en stel deze in op 0
let clickedFeature = -1; // Definieer de variabele clickedFeature en stel deze in op -1

function preload(){
   data = loadJSON("https://raw.githubusercontent.com/mia-mmt2-2324/earthquakes/main/4.5_day.geojson");
}

function setup(){
   console.log(data); // Controleren of de data correct is ingeladen
   createCanvas(1000, 2000);
}

function draw(){
    if(scene === 0){
     background(250,133,63);
       
     text("titel="+data.metadata.title, 700, 20);

     
     for(let i = 0; i < data.features.length; i++){
         stroke(0);
         fill(205,133,63);
         rect(0, i * 100, width, 100);
         fill(0);
         text("magnitude="+data.features[i].properties.title, 105, 60+ i*100);
 
         let magnitude = data.features[i].properties.mag;
 
         fill(255); // Witte kleur voor de sterren
         noStroke(); // Geen rand voor de sterren
 
         let xPos = 30; // X-positie van het midden van de sterren
         let yPos = 50 + i * 100; // Y-positie van het midden van de sterren
 
         beginShape();
         for (let j = 0; j < 360; j += 72) {
             let x = xPos + cos(radians(j)) * magnitude * 5; // De grootte van de sterren wordt bepaald door de magnitude
             let y = yPos + sin(radians(j)) * magnitude * 5;
             vertex(x, y);
             x = xPos + cos(radians(j + 36)) * magnitude * 2.5; // Binnenste hoeken van de sterren
             y = yPos + sin(radians(j + 36)) * magnitude * 2.5;
             vertex(x, y);
         }
         endShape(CLOSE);
     }
     textSize(25);
     text(data.metadata.title + data.metadata.api , 100, 25);
     textSize(15);
     text("url="+data.metadata.url, 100, 1350);
        
    } else if (scene === 1){
        background(205,133,63);
 
        text("id= "+data.features[clickedFeature].id, 20, 20);
        text("type= "+data.features[clickedFeature].type, 20, 40);
        text('mag= '+data.features[clickedFeature].properties.mag, 20, 60);
        text('place= '+data.features[clickedFeature].properties.place, 20, 80);
        let timeMilliseconds = data.features[clickedFeature].properties.time;
        let date = new Date(timeMilliseconds);
        let day = date.getDate();
        let month = date.getMonth() + 1;
        let year = date.getFullYear();
        let dayOfWeek = date.getDay();
        let daysOfWeek = ["Zondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag"];
        text('time= '+ day + "/" + month + "/" + year + " (" + daysOfWeek[dayOfWeek] + ")", 20, 100);
        text("coordinates= "+data.features[clickedFeature].geometry.coordinates, 20, 120);
        
        rect(30,250,100,40);
    }
 }
 
 
 
function mouseClicked(){
   if(scene === 0){
       for(let i = 0; i < data.features.length; i++){
           if(mouseX > 0 && mouseX < width && mouseY > i * 100 && mouseY < i * 100 + 100){
               scene = 1;
               clickedFeature = i;
           }
       }
       scene = 1;
   } else if (scene === 1 && mouseX > 30 && mouseX < 130 && mouseY > 250 && mouseY < 290){
       scene = 0;
       clickedFeature = -1;
   }
}